import { NSDatabase } from '@sqltools/types';

const keywordsArr = [
  'ABS',
  'ACOS',
  'ADDTIME',
  'AES_DECRYPT',
  'AES_ENCRYPT',
  'ANY_VALUE',
  'APPROX_COUNT_DISTINCT',
  'APPROX_COUNT_DISTINCT_ACCUMULATE',
  'APPROX_COUNT_DISTINCT_COMBINE',
  'APPROX_COUNT_DISTINCT_ESTIMATE',
  'APPROX_GEOGRAPHY_INTERSECTS',
  'APPROX_PERCENTILE',
  'ASCII',
  'ASIN',
  'ATAN',
  'ATAN2',
  'ATAN',
  'AVG',
  'BETWEEN',
  'NOT BETWEEN',
  'BIN',
  'BINARY',
  'BIT_AND',
  'BIT_COUNT',
  'BIT_OR',
  'BIT_XOR',
  '&',
  '<<',
  '~',
  '|',
  '>>',
  '^',
  'CASE',
  'CEIL',
  'CHAR',
  'CHARACTER_LENGTH',
  'CHARSET',
  'COALESCE',
  'CONCAT',
  'CONCAT_WS',
  'CONNECTION_ID',
  'CONV',
  'CAST',
  'CONVERT',
  'CONVERT_TZ',
  'COS',
  'COT',
  'COUNT',
  'CRC32',
  'CURRENT_DATE',
  'CURDATE',
  'CURRENT_TIME',
  'CURTIME',
  'CURRENT_TIMESTAMP',
  'DATABASE',
  'DATE',
  'DATE_ADD',
  'DATE_FORMAT',
  'DATE_SUB',
  'DATE_TRUNC',
  'DATEDIFF',
  'DAY',
  'DAYNAME',
  'DAYOFWEEK',
  'DAYOFYEAR',
  'DECODE',
  'DEGREES',
  'DENSE_RANK',
  'DOT_PRODUCT',
  'ELT',
  'ESTIMATED_QUERY_LEAF_MEMORY',
  'ESTIMATED_QUERY_RUNTIME',
  'EUCLIDEAN_DISTANCE',
  'EXP',
  'EXTRACT',
  'FIELD',
  'FIRST',
  'FIRST_VALUE',
  'FLOOR',
  'FORMAT',
  'FOUND_ROWS',
  'FROM_BASE64',
  'FROM_DAYS',
  'FROM_UNIXTIME',
  'GEOGRAPHY_AREA',
  'GEOGRAPHY_CONTAINS',
  'GEOGRAPHY_DISTANCE',
  'GEOGRAPHY_INTERSECTS',
  'GEOGRAPHY_LATITUDE',
  'GEOGRAPHY_LENGTH',
  'GEOGRAPHY_LONGITUDE',
  'GEOGRAPHY_POINT',
  'GEOGRAPHY_WITHIN_DISTANCE',
  'GET_FORMAT',
  'GREATEST',
  'GROUP_CONCAT',
  'HEX',
  'HIGHLIGHT',
  'HOUR',
  'IF',
  'IN',
  'NOT IN',
  'INET_ATON',
  'INET_NTOA',
  'INET6_ATON',
  'INET6_NTOA',
  'INITCAP',
  'INSTR',
  'ISNULL',
  'ISNUMERIC',
  'JSON_AGG',
  'JSON_ARRAY_CONTAINS_DOUBLE',
  'JSON_ARRAY_CONTAINS_STRING',
  'JSON_ARRAY_CONTAINS_JSON',
  'JSON_ARRAY_PACK',
  'JSON_ARRAY_PUSH_DOUBLE',
  'JSON_ARRAY_PUSH_STRING',
  'JSON_ARRAY_PUSH_JSON',
  'JSON_ARRAY_UNPACK',
  'JSON_BUILD_OBJECT',
  'JSON_DELETE_KEY',
  'JSON_EXTRACT_DOUBLE',
  'JSON_EXTRACT_STRING',
  'JSON_EXTRACT_JSON',
  'JSON_EXTRACT_BIGINT',
  'JSON_GET_TYPE',
  'JSON_KEYS',
  'JSON_LENGTH',
  'JSON_MATCH_ANY',
  'JSON_PRETTY',
  'JSON_SET_DOUBLE',
  'JSON_SET_STRING',
  'JSON_SET_JSON',
  'JSON_SPLICE_DOUBLE',
  'JSON_SPLICE_STRING',
  'JSON_SPLICE_JSON',
  'JSON_TO_ARRAY',
  'LAG',
  'LAST',
  'LAST_DAY',
  'LAST_INSERT_ID',
  'LAST_VALUE',
  'LCASE',
  'LEAD',
  'LEAST',
  'LEFT',
  'LENGTH',
  'LIKE',
  'NOT LIKE',
  'LN',
  'LOCALTIMESTAMP',
  'LOCATE',
  'LOG',
  'LOG10',
  'LOG2',
  'LPAD',
  'LTRIM',
  'MATCH',
  'MAX',
  'MD5',
  'MEDIAN',
  'MICROSECOND',
  'MIN',
  'MINUTE',
  'MOD',
  'MONTH',
  'MONTHNAME',
  'MONTHS_BETWEEN',
  'NOPARAM',
  'NOW',
  'NTH_VALUE',
  'NTILE',
  'NULLIF',
  'NVL',
  'IFNULL',
  'PERCENT_RANK',
  'PERCENTILE_CONT',
  'MEDIAN',
  'PERCENTILE_DISC',
  'PI',
  'POW',
  'QUARTER',
  'QUOTE',
  'RADIANS',
  'RAND',
  'RANK',
  'REGEXP_INSTR',
  'REGEXP_REPLACE',
  'REGEXP_SUBSTR',
  'REPLACE',
  'REVERSE',
  'RIGHT',
  'RLIKE',
  'REGEXP',
  'ROUND',
  'ROW_COUNT',
  'ROW_NUMBER',
  'RPAD',
  'RTRIM',
  'SCALAR_VECTOR_MUL',
  'SEC_TO_TIME',
  'SECOND',
  'SECRET',
  'SET',
  'SHA1',
  'SHA2',
  'SIGMOID',
  'SIGN',
  'SIN',
  'SLEEP',
  'SPLIT',
  'SQRT',
  'STD',
  'STDDEV',
  'STDDEV_POP',
  'STDDEV_SAMP',
  'STR_TO_DATE',
  'strcmp',
  'STRING_BYTES',
  'SUBSTRING',
  'SUBSTRING_INDEX',
  'SUM',
  'SYS_GUID',
  'UUID',
  'TAN',
  'TIME',
  'TIME_BUCKET',
  'TIME_FORMAT',
  'TIME_TO_SEC',
  'TIMEDIFF',
  'TIMESTAMP',
  'TIMESTAMPADD',
  'TIMESTAMPDIFF',
  'TO_BASE64',
  'TO_CHAR',
  'TO_DATE',
  'TO_DAYS',
  'TO_JSON',
  'TO_NUMBER',
  'TO_SECONDS',
  'TO_TIMESTAMP',
  'TRIM',
  'TRUNC',
  'TRUNCATE',
  'UCASE',
  'UNHEX',
  'UNIX_TIMESTAMP',
  'USER',
  'UTC_DATE',
  'UTC_TIME',
  'UTC_TIMESTAMP',
  'VARIANCE',
  'VAR_SAMP',
  'VECTOR_ADD',
  'VECTOR_ELEMENTS_SUM',
  'VECTOR_KTH_ELEMENT',
  'VECTOR_MUL',
  'VECTOR_NUM_ELEMENTS',
  'VECTOR_SORT',
  'VECTOR_SUB',
  'VECTOR_SUBVECTOR',
  'VECTOR_SUM',
  'WEEK',
  'WEEKDAY',
  'YEAR',
];

const keywordsCompletion: { [w: string]: NSDatabase.IStaticCompletion } = keywordsArr.reduce((agg, word) => {
  agg[word] = {
    label: word,
    detail: word,
    filterText: word,
    sortText: (['SELECT', 'CREATE', 'UPDATE', 'DELETE'].includes(word) ? '2:' : '') + word,
    documentation: {
      value: `\`\`\`yaml\nWORD: ${word}\n\`\`\``,
      kind: 'markdown'
    }
  };
  return agg;
}, {});

export default keywordsCompletion;